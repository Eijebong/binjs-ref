initSidebarItems({"enum":[["ASTField",""],["ASTNode",""],["ArrowExpression",""],["AssignmentTarget",""],["AssignmentTargetOrAssignmentTargetWithInitializer",""],["AssignmentTargetPattern",""],["AssignmentTargetProperty",""],["BinaryOperator",""],["Binding",""],["BindingOrBindingWithInitializer",""],["BindingPattern",""],["BindingProperty",""],["CompoundAssignmentOperator",""],["ExportDeclaration",""],["Expression",""],["ExpressionOrSuper",""],["ExpressionOrTemplateElement",""],["ForInOfBindingOrAssignmentTarget",""],["FunctionBodyOrExpression",""],["FunctionDeclaration",""],["FunctionDeclarationOrClassDeclarationOrExpression",""],["FunctionDeclarationOrClassDeclarationOrVariableDeclaration",""],["FunctionExpression",""],["Getter",""],["ImportDeclaration",""],["ImportDeclarationOrExportDeclarationOrStatement",""],["IterationStatement",""],["Literal",""],["Method",""],["MethodDefinition",""],["ObjectProperty",""],["Parameter",""],["Program",""],["PropertyName",""],["Setter",""],["SimpleAssignmentTarget",""],["SpreadElementOrExpression",""],["Statement",""],["UnaryOperator",""],["UpdateOperator",""],["VariableDeclarationKind",""],["VariableDeclarationOrExpression",""]],"struct":[["ArrayAssignmentTarget",""],["ArrayBinding",""],["ArrayExpression",""],["AssertedBlockScope",""],["AssertedParameterScope",""],["AssertedVarScope",""],["AssignmentExpression",""],["AssignmentTargetIdentifier",""],["AssignmentTargetPropertyIdentifier",""],["AssignmentTargetPropertyProperty",""],["AssignmentTargetWithInitializer",""],["AwaitExpression",""],["BinaryExpression",""],["BindingIdentifier",""],["BindingPropertyIdentifier",""],["BindingPropertyProperty",""],["BindingWithInitializer",""],["Block",""],["BreakStatement",""],["CallExpression",""],["CatchClause",""],["ClassDeclaration",""],["ClassElement",""],["ClassExpression",""],["CompoundAssignmentExpression",""],["ComputedMemberAssignmentTarget",""],["ComputedMemberExpression",""],["ComputedPropertyName",""],["ConditionalExpression",""],["ContinueStatement",""],["DataProperty",""],["DebuggerStatement",""],["Directive",""],["DoWhileStatement",""],["EagerArrowExpression",""],["EagerFunctionDeclaration",""],["EagerFunctionExpression",""],["EagerGetter",""],["EagerMethod",""],["EagerSetter",""],["EmptyStatement",""],["Export",""],["ExportAllFrom",""],["ExportDefault",""],["ExportFrom",""],["ExportFromSpecifier",""],["ExportLocalSpecifier",""],["ExportLocals",""],["ExpressionStatement",""],["ForInOfBinding",""],["ForInStatement",""],["ForOfStatement",""],["ForStatement",""],["FormalParameters",""],["FunctionBody",""],["IdentifierExpression",""],["IfStatement",""],["Import",""],["ImportNamespace",""],["ImportSpecifier",""],["LabelledStatement",""],["LiteralBooleanExpression",""],["LiteralInfinityExpression",""],["LiteralNullExpression",""],["LiteralNumericExpression",""],["LiteralPropertyName",""],["LiteralRegExpExpression",""],["LiteralStringExpression",""],["Module",""],["NewExpression",""],["NewTargetExpression",""],["Null",""],["ObjectAssignmentTarget",""],["ObjectBinding",""],["ObjectExpression",""],["ReturnStatement",""],["Script",""],["ShorthandProperty",""],["SkippableArrowExpression",""],["SkippableFunctionDeclaration",""],["SkippableFunctionExpression",""],["SkippableGetter",""],["SkippableMethod",""],["SkippableSetter",""],["SpreadElement",""],["StaticMemberAssignmentTarget",""],["StaticMemberExpression",""],["Super",""],["SwitchCase",""],["SwitchDefault",""],["SwitchStatement",""],["SwitchStatementWithDefault",""],["TemplateElement",""],["TemplateExpression",""],["ThisExpression",""],["ThrowStatement",""],["TryCatchStatement",""],["TryFinallyStatement",""],["UnaryExpression",""],["UpdateExpression",""],["VariableDeclaration",""],["VariableDeclarator",""],["WhileStatement",""],["WithStatement",""],["YieldExpression",""],["YieldStarExpression",""]],"trait":[["Visitor","A set of callbacks used to inspect the contents of an AST in a strongly-typed manner. For each node `Foo`, `enter_foo()` will be called before visiting the children, giving the opportunity to alter the node, and `enter_foo()` will be called after visiting the children, giving the opportunity to alter it further."],["Walker",""]],"type":[["Arguments",""],["Identifier",""],["IdentifierName",""],["Label",""],["ListOfAssignmentTargetOrAssignmentTargetWithInitializer",""],["ListOfAssignmentTargetProperty",""],["ListOfBindingProperty",""],["ListOfClassElement",""],["ListOfDirective",""],["ListOfExportFromSpecifier",""],["ListOfExportLocalSpecifier",""],["ListOfExpressionOrTemplateElement",""],["ListOfIdentifierName",""],["ListOfImportDeclarationOrExportDeclarationOrStatement",""],["ListOfImportSpecifier",""],["ListOfObjectProperty",""],["ListOfOptionalBindingOrBindingWithInitializer",""],["ListOfOptionalSpreadElementOrExpression",""],["ListOfParameter",""],["ListOfStatement",""],["ListOfSwitchCase",""],["ListOfVariableDeclarator",""],["OptionalAssertedBlockScope",""],["OptionalAssertedParameterScope",""],["OptionalAssertedVarScope",""],["OptionalAssignmentTarget",""],["OptionalBinding",""],["OptionalBindingIdentifier",""],["OptionalBindingOrBindingWithInitializer",""],["OptionalCatchClause",""],["OptionalExpression",""],["OptionalIdentifierName",""],["OptionalLabel",""],["OptionalSpreadElementOrExpression",""],["OptionalStatement",""],["OptionalVariableDeclarationOrExpression",""],["Path",""],["PathItem",""],["String",""]]});